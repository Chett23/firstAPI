{"version":3,"sources":["Components/Button.js","Data/items.js","Data/users.js","Pages/Admin.js","Components/List.js","Data/cart.js","Pages/Store.js","Pages/Tacos.js","Pages/Login.js","Pages/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["Button","props","react_default","a","createElement","children","getItems","Promise","resolve","reject","fetch","then","items","json","catch","submitToBackEnd","item","method","headers","Content-Type","body","JSON","stringify","credentials","inventory","removeItemFromInventory","id","concat","login","user","err","loggout","metehod","localStorage","removeItem","Admin","state","nameValue","priceValue","imageValue","edit","itemToEdit","loading","onSubmit","event","preventDefault","_this","itemToAdd","name","price","image","_id","setState","alert","logout","editItemInInventory","tempIndex","findIndex","el","removeFromInventory","returnToAdd","handleChange","Object","defineProperty","target","value","_this2","this","parse","getItem","_this3","style","display","lexDirection","height","width","margin","textAlign","flexDirection","type","onChange","placeholder","onClick","map","i","key","react_router","to","Component","List","_ref","functionality","title","btnValue","borderLeft","padding","objectSpread","flexFlow","listStyle","length","border","backgroundColor","justifyContent","src","alt","qty","toFixed","cursor","getCart","cart","addItemToCart","response","removeItemFromCart","Store","addToCart","removeFromCart","List_List","Tacos","Login","userName","password","newuser","error","submit","newUser","userRedacted","token","setItem","_ref2","userResponse","console","log","justifySelf","borderRadius","color","onFocus","placeSelf","NotFound","App","path","react_router_dom","gridTemplateColumns","gridColumnStart","gridColumnEnd","alignSelf","textDecoration","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.86d67c5a.chunk.js","sourcesContent":["import React from 'react';\n\n\nexport default (props) => (\n  <button {...props}>{props.children}</button>\n)","export const getItems = () => new Promise((resolve, reject) => {\n  fetch('http://localhost:5000/items')\n    .then(items => {\n      resolve(items.json())\n    }).catch(reject)\n})\n\nexport const submitToBackEnd = (item) => new Promise((resolve, reject) => {\n  fetch('http://localhost:5000/items', {\n    method: 'POST',\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify(item),\n    credentials: \"include\"\n  })\n    .then(inventory => {\n      resolve(inventory)\n    }).catch(reject)\n})\n\nexport const removeItemFromInventory = (id) => new Promise((resolve, reject) => {\n  fetch(`http://localhost:5000/items/${id}`, {\n    method: 'DELETE',\n    credentials: \"include\",\n  })\n    .then(inventory => {\n      resolve(inventory)\n    }).catch(reject)\n})\n\n// export const getItems = () => new Promise ((resolve, reject) => {\n//   fetch('https://shopping-cart-api-helio.herokuapp.com/items')\n//     .then(items => {\n//       resolve(items.json())\n//     }).catch(reject)\n// })\n\n// export const submitToBackEnd = (item) => new Promise((resolve, reject) => {\n//   fetch('https://shopping-cart-api-helio.herokuapp.com/items', {\n//     method: 'POST',\n//     headers: { \"Content-Type\": \"application/json\" },\n//     body: JSON.stringify(item)\n//   })\n//     .then(inventory => {\n//       resolve(inventory)\n//     }).catch(reject)\n// })\n\n// export const removeItemFromInventory = (id) => new Promise((resolve, reject) => {\n//   fetch(`https://shopping-cart-api-helio.herokuapp.com/${id}`, {\n//     method: 'DELETE',\n//   })\n//   .then(inventory => {\n//     resolve(inventory)\n//   }).catch(reject)\n// })\n","export const login = (user) => new Promise((resolve, reject) => {\n  fetch(`http://localhost:5000/login`, {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    credentials: \"include\",\n    body: JSON.stringify(user),\n  })\n    .then(user => {\n      resolve(user.json())\n    }).catch(err => {\n      reject(err)\n    })\n})\n\nexport const loggout = () => new Promise ((resolve, reject) => {\n  fetch(`http://localhost:5000/loggout`,{\n    metehod: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    credentials: \"include\",\n  })\n  .then(()=>{\n    localStorage.removeItem('user')\n    resolve()\n  }).catch(err => reject(err))\n})\n\n// export const login = (user) => new Promise((resolve, reject) => {\n//   fetch(`https://shopping-cart-api-helio.herokuapp.com/users`, {\n//     method: \"POST\",\n//     headers: { \"Content-Type\": \"application/json\" },\n//     body: JSON.stringify(user)\n//   })\n//     .then(user => {\n//       resolve(user.json())\n//     }).catch(err => {\n//       reject(err)\n//     })\n// })","import React, { Component } from 'react';\nimport { Redirect } from 'react-router';\n\n\nimport Button from '../Components/Button';\nimport { getItems } from '../Data/items';\nimport { submitToBackEnd } from '../Data/items';\nimport { removeItemFromInventory } from '../Data/items';\nimport { loggout } from '../Data/users';\n\n\nclass Admin extends Component {\n  state = {\n    items: [],\n    nameValue: '',\n    priceValue: '',\n    imageValue: '',\n    edit: false,\n    itemToEdit: '',\n    user: null,\n    loading: true\n  }\n\n  onSubmit = (event) => {\n    event.preventDefault();\n    if (this.state.user) {\n      const itemToAdd = { 'name': this.state.nameValue, 'price': this.state.priceValue, 'image': this.state.imageValue }\n      if (this.state.edit === true) {\n        itemToAdd._id = this.state.itemToEdit\n      }\n      submitToBackEnd(itemToAdd)\n        .then(() => {\n          getItems()\n            .then(inventory => {\n              this.setState({\n                items: inventory,\n                nameValue: '',\n                priceValue: '',\n                imageValue: '',\n                edit: false,\n                itemToEdit: '',\n              })\n            })\n        })\n    } else {\n      alert('You do not have the authorization, please sign in.')\n    }\n  }\n\n  logout = () => () => {\n    localStorage.removeItem('user')\n    loggout()\n  }\n\n  editItemInInventory = (item) => () => {\n    getItems()\n      .then(items => {\n        const tempIndex = items.findIndex((el) => el.name === item.name)\n        this.setState({\n          edit: true,\n          itemToEdit: items[tempIndex]._id,\n          nameValue: items[tempIndex].name,\n          priceValue: items[tempIndex].price,\n          imageValue: items[tempIndex].image,\n        })\n      })\n  }\n\n  removeFromInventory = (item) => () => {\n    removeItemFromInventory(item._id)\n      .then(() => {\n        getItems()\n          .then(inventory =>\n            this.setState({\n              items: inventory\n            }))\n      })\n  }\n\n  returnToAdd = () => this.setState({\n    edit: false,\n    itemToEdit: '',\n    nameValue: '',\n    priceValue: '',\n    imageValue: '',\n  })\n\n  handleChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value\n    })\n  }\n\n  componentDidMount() {\n    let user = JSON.parse(localStorage.getItem('user'))\n    if (user) {\n      getItems()\n        .then(items => {\n          this.setState({\n            user,\n            loading: false,\n            items\n          })\n        })\n    }else{\n      this.setState({\n        loading: false,\n      })\n    }\n  }\n\n  render() {\n    return this.state.loading || this.state.user\n      ?\n      <div\n        style={{\n          display: 'flex',\n          lexDirection: 'row',\n          height: '100%',\n          width: '90%',\n          margin: '0 auto'\n        }}\n      >\n        <div\n          style={{\n            width: '50%',\n            margin: '2%'\n          }}\n        >\n          {this.state.edit === true ? <h2 style={{ textAlign: 'center' }}>Edit Item in Inventory</h2> : <h2 style={{ textAlign: 'center' }}>Add Item to Inventory</h2>}\n          <form\n            onSubmit={this.onSubmit}\n            style={{\n              display: 'flex',\n              flexDirection: 'column',\n            }}\n          >\n            <div style={{ display: 'flex', flexDirection: 'row', margin: '10px' }}>\n              <div style={{ width: '20%' }}>\n                <label>Name: </label>\n              </div>\n              <div style={{ width: '80%' }}>\n                <input\n                  type={'text'}\n                  name={'nameValue'}\n                  value={this.state.nameValue}\n                  onChange={this.handleChange}\n                  placeholder={'Item Name'}\n                  style={{ width: '100%' }}\n                />\n              </div>\n            </div>\n            <div style={{ display: 'flex', flexDirection: 'row', margin: '10px' }}>\n              <div style={{ width: '20%' }}>\n                <label>Price: </label>\n              </div>\n              <div style={{ width: '80%' }}>\n                <input\n                  type={'text'}\n                  name={'priceValue'}\n                  value={this.state.priceValue}\n                  onChange={this.handleChange}\n                  placeholder={'Item Price'}\n                  style={{ width: '100%' }}\n                />\n              </div>\n            </div>\n            <div style={{ display: 'flex', flexDirection: 'row', margin: '10px' }}>\n              <div style={{ width: '20%' }}>\n                <label>Image Url: </label>\n              </div>\n              <div style={{ width: '80%' }}>\n                <input\n                  type={'text'}\n                  name={'imageValue'}\n                  value={this.state.imageValue}\n                  onChange={this.handleChange}\n                  placeholder={'Item Url'}\n                  style={{ width: '100%' }}\n                />\n              </div>\n            </div>\n            {this.state.edit === true\n              ?\n              <div>\n                <Button type={'submit'} style={{ width: '70%' }}>Edit Item</Button>\n                <Button onClick={this.returnToAdd} style={{ width: '30%' }} >Return to add</Button>\n              </div>\n              :\n              <Button type={'submit'} >Submit</Button>}\n          </form>\n        </div>\n        <div\n          style={{\n            width: '50%',\n            margin: '2%'\n          }}\n        >\n          <h2 style={{ textAlign: 'center' }}>Current Inventory</h2>\n          <ul>\n            {this.state.items.map((item, i) =>\n              <li key={i} style={{ margin: '5px 0px' }}>\n                {`Name: ${item.name}, Price: ${item.price}, Id: ${item._id}`}\n                <Button onClick={this.editItemInInventory(item)} style={{ margin: '0px 0px 0px 10px' }}>Edit</Button>\n                <Button onClick={this.removeFromInventory(item)} style={{ margin: '0px 0px 0px 10px' }}>Remove</Button>\n              </li>\n            )}\n          </ul>\n          <Button onClick={this.logout()} style={{width: '100%'}} >Loggout</Button>\n        </div>\n      </div>\n      :\n      <Redirect to='/admin/login' />\n  }\n}\n\nexport default Admin;","import React from 'react';\nimport Button from './Button';\n\n\nexport const List = ({ items, functionality, title, btnValue, style }) => (\n  <div style={{borderLeft: '1px solid black', padding: '20px'}}>\n    <h3 style={{ textAlign:'center', width: '100%' }}>{title}</h3>\n    <ul\n      style={{\n        display: 'flex',\n        flexFlow: 'row wrap',\n        listStyle: 'none',\n        ...style,\n      }}\n    >\n      {\n        items.length > 0 \n        ?\n        items.map((item, i) =>\n        <li\n          key={i}\n          style={{\n            width: '150px',\n            height: '250px',\n            border: '1px solid lightGrey',\n            margin: '5px',\n            backgroundColor: 'rgb(200,200,200)',\n            display: 'flex',\n            flexDirection: 'column',\n            justifyContent: 'space-between',\n          }}\n        >\n          <div style={{ textAlign: 'center' }}>\n            {<strong>{item.name}</strong>}\n          </div>\n          <div>\n            <img style={{ width: '150px', height: '150px' }} src={item.image} alt='' />\n          </div>\n          <div>\n        {title !== 'Cart' ? `Price: ${item.price}` : `Price: $${(item.price * item.qty).toFixed(2)}`}\n          </div>\n          <div>\n            {title === 'Cart' && `Quantity: ${item.qty}`}\n          </div>\n        <Button onClick={functionality(item)} style={{ backgroundColor: 'rgb(160,160,160)', height: '30px', cursor: 'pointer' }}>{btnValue}</Button>\n        </li>\n      )\n      :\n      title === 'Cart'\n      ?\n      <strong style={{width: '100%', textAlign: 'center'}}>There is nothing in your Cart.</strong>\n      :\n      <strong style={{width: '100%', textAlign: 'center'}}>There is nothing in your Inventory.</strong>\n    }\n    </ul>\n  </div>\n)","export const getCart = () => new Promise ((resolve, reject) => {\n  fetch('http://localhost:5000/cart')\n    .then(cart => {\n      resolve(cart.json())\n    }).catch(reject)\n})\n\nexport const addItemToCart = (item) => new Promise ((resolve, reject) => {\n  fetch('http://localhost:5000/cart', {\n    method: 'POST',\n    headers: {\"Content-Type\": \"application/json\"},\n    body: JSON.stringify(item)\n  })\n    .then(response => {\n      resolve(response)\n      // resolve(response.json())\n    }).catch(reject)\n})\n\nexport const removeItemFromCart = (id) => new Promise ((resolve, reject) => {\n  fetch(`http://localhost:5000/cart/${id}`, {\n    method: 'DELETE'\n  })\n    .then(cart => {\n      resolve(cart)\n      // resolve(cart.json())\n    }).catch(reject)\n})\n\n// export const getCart = () => new Promise ((resolve, reject) => {\n//   fetch('https://shopping-cart-api-helio.herokuapp.com/cart')\n//     .then(cart => {\n//       resolve(cart.json())\n//     }).catch(reject)\n// })\n\n// export const addItemToCart = (item) => new Promise ((resolve, reject) => {\n//   fetch('https://shopping-cart-api-helio.herokuapp.com/cart', {\n//     method: 'POST',\n//     headers: {\"Content-Type\": \"application/json\"},\n//     body: JSON.stringify(item)\n//   })\n//     .then(response => {\n//       resolve(response)\n//       // resolve(response.json())\n//     }).catch(reject)\n// })\n\n// export const removeItemFromCart = (id) => new Promise ((resolve, reject) => {\n//   fetch(`https://shopping-cart-api-helio.herokuapp.com/cart/${id}`, {\n//     method: 'DELETE'\n//   })\n//     .then(cart => {\n//       resolve(cart)\n//       // resolve(cart.json())\n//     }).catch(reject)\n// })","import React, { Component } from 'react';\nimport '../App.css';\n\nimport { List } from '../Components/List';\nimport { getItems } from '../Data/items';\nimport { getCart } from '../Data/cart';\nimport { addItemToCart } from '../Data/cart';\nimport { removeItemFromCart } from '../Data/cart';\n\n\nclass Store extends Component {\n  state = {\n    cart: [],\n    items: []\n  }\n\n\n  addToCart = (item) => () => {\n    addItemToCart(item)\n      .then(() => {\n        getCart()\n          .then(items =>\n            this.setState({\n              cart: items\n            }))\n      })\n  }\n\n  removeFromCart = (item) => () => {\n    removeItemFromCart(item._id)\n      .then(() => {\n        getCart()\n          .then((cart) =>\n            this.setState({\n              cart\n            })\n          )\n      })\n  }\n\n  componentDidMount() {\n    getItems()\n      .then(items => {\n        this.setState({\n          items\n        })\n      })\n    getCart()\n      .then(cart => {\n        this.setState({\n          cart\n        })\n      })\n  }\n\n  render() {\n    return (\n      <div>\n        <div\n          style={{\n            margin: '0',\n            padding: '0',\n            height: '100%',\n            display: 'flex',\n          }}\n        >\n          <List\n            items={this.state.items}\n            functionality={this.addToCart}\n            btnValue='Add to Cart'\n            title='Store'\n          />\n          <List\n            items={this.state.cart}\n            functionality={this.removeFromCart}\n            title='Cart'\n            btnValue='Remove item'\n            style={{ width: '350px' }}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Store;","import React from 'react';\n\n\nexport default () => (\n    <div>\n        <div style={{ textAlign: 'center' }}>\n            <h1 >Tacos for Edmundo!!!</h1>\n            <img src={'https://media.tenor.com/images/c80c99b8d22f51ed585cefa4d2d7562f/tenor.gif'} alt='' />\n        </div>\n    </div>\n)","import React, { Component } from 'react';\nimport { Redirect } from 'react-router';\n\nimport Button from '../Components/Button';\nimport { login } from '../Data/users';\n\n\nclass Login extends Component {\n  state = {\n    userName: '',\n    password: '',\n    user: null,\n    newuser: false,\n    error: null\n  }\n\n\n  submit = (event) => {\n    event.preventDefault();\n    let user = {\n      userName: this.state.userName,\n      password: this.state.password,\n    }\n    if (this.state.newuser) {\n      user.newUser = true\n      login(user)\n        .then(({ userRedacted, token }) => {\n          localStorage.setItem(\"user\", JSON.stringify(userRedacted))\n          this.setState({\n            newUser: false,\n            user: userRedacted,\n          })\n        })\n    } else {\n      login(user)\n        .then(({ userResponse, token }) => {\n          localStorage.setItem(\"user\", JSON.stringify(userResponse))\n          this.setState({\n            user: userResponse\n          })\n        }).catch((err) => {\n          console.log(`it didnt work ${err}`)\n          this.setState({\n            error: \"Login Failed, PLease try again.\"\n          })\n        }\n\n        )\n    }\n  }\n\n  handleChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value\n    })\n  }\n\n  componentDidMount() {\n    let user = JSON.parse(localStorage.getItem('user'))\n    if (user) {\n      this.setState({\n        user\n      })\n    }\n  }\n\n  render() {\n    return this.state.user\n      ?\n      <Redirect to='/admin' />\n      :\n      <div\n        style={{\n          justifySelf: 'center',\n          display: 'flex',\n          flexDirection: 'column',\n          textAlign: 'center',\n          width: '500px',\n          backgroundColor: 'darkgrey',\n          borderRadius: '20px',\n          margin: '10% auto',\n          padding: '5px'\n        }}\n      >\n        <h1>Admin Login</h1>\n        {this.state.error && <span style={{ textAlign: 'center', color: 'red' }}>{this.state.error}</span>}\n        <form\n          onSubmit={this.submit}\n          style={{\n            display: 'flex',\n            flexDirection: 'column',\n          }}\n        >\n          <div style={{ display: 'flex', flexDirection: 'row', margin: '10px' }}>\n            <div style={{ width: '20%' }}>\n              <label>User Name: </label>\n            </div>\n            <div style={{ width: '80%' }}>\n              <input\n                type={'text'}\n                name={'userName'}\n                value={this.state.userName}\n                onChange={this.handleChange}\n                onFocus={() => this.setState({ error: null})}\n                placeholder={'User Name . . . '}\n                style={{ width: '100%' }}\n              />\n            </div>\n          </div>\n          <div style={{ display: 'flex', flexDirection: 'row', margin: '10px' }}>\n            <div style={{ width: '20%' }}>\n              <label>Password: </label>\n            </div>\n            <div style={{ width: '80%' }}>\n              <input\n                type={'password'}\n                name={'password'}\n                value={this.state.password}\n                onChange={this.handleChange}\n                onFocus={() => this.setState({ error: null, password: '' })}\n                placeholder={'Password . . . '}\n                style={{ width: '100%' }}\n              />\n            </div>\n          </div>\n          <div style={{ width: '80%', placeSelf: 'center', display: 'flex', flexDirection: 'row' }}>\n            <Button type={'submit'} style={{ width: '75%' }}>Login</Button>\n            <Button onClick={() => this.setState({ newuser: true })} style={{ width: '25%' }}>New User</Button>\n          </div>\n          <div><br /></div>\n        </form>\n      </div>\n  }\n}\n\nexport default Login;","import React from 'react';\n\nexport default () => (\n    <div style={{ textAlign:'center' }}>\n        <h1 style={{ textAlign: 'center' }}>404 Error</h1>\n        <p>Please try a different location.</p>\n        <br />\n    </div>\n)","import React, { Component } from 'react';\nimport './App.css';\nimport {\n  BrowserRouter as Router,\n  Route,\n  NavLink,\n  Switch,\n  // withRouter,\n} from 'react-router-dom';\n\n\nimport Admin from './Pages/Admin';\nimport Store from './Pages/Store';\nimport Tacos from './Pages/Tacos';\nimport Login from './Pages/Login';\nimport NotFound from './Pages/NotFound';\n\n\nclass App extends Component {\n  state = {\n    path: '',\n  }\n\n\n  render() {\n    return (\n      <div>\n        <Router>\n          <ul\n            style={{\n              listStyle: 'none',\n              display: 'inline-grid',\n              gridTemplateColumns: '20px auto 100px 100px 20px',\n              width: '100%',\n              backgroundColor: 'grey',\n            }}>\n            <li\n              style={{\n                gridColumnStart: '2',\n                gridColumnEnd: 'span 1',\n                alignSelf: 'center'\n              }}\n            >\n              <NavLink\n                to='/'\n                style={{\n                  textDecoration: 'none',\n                  color: 'black',\n                }}\n              >\n                <h1>{`The Awesome Store`}</h1>\n              </NavLink>\n            </li>\n            <li\n              style={{\n                placeSelf: 'center'\n              }}\n            >\n              <NavLink\n                to='/'\n                style={{\n                  gridColumnStart: '3',\n                  gridColumnEnd: 'span 1',\n                  textDecoration: 'none',\n                  color: 'black'\n                }}\n              >Home</NavLink></li>\n            <li\n              style={{\n                placeSelf: 'center'\n              }}>\n              <NavLink\n                to= '/admin/login'\n                style={{\n                  gridColumnStart: '4',\n                  gridColumnEnd: 'span 1',\n                  textDecoration: 'none',\n                  color: 'black'\n                }}\n              >Admin Login</NavLink>\n            </li>\n          </ul>\n          <Switch>\n            <Route path=\"/\" exact component={Store} />\n            <Route path=\"/admin\" exact component={Admin} />\n            <Route path=\"/admin/login\" component={Login} />\n            <Route path=\"/tacos\" component={Tacos} />\n            <Route component={NotFound} />\n          </Switch>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}